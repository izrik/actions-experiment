---
name: pr_closed

on:
  pull_request:
    types: [closed]
    branches:
      - master

jobs:
#  notify_merged:
#    if: github.event.pull_request.merged == true
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: on_pr_closed prepare and send message
#        run: |
#          export GITHUB_EVENT_PULL_REQUEST_TITLE="${{ github.event.pull_request.title }}"
#          export GITHUB_EVENT_PULL_REQUEST_HTML_URL="${{ github.event.pull_request.html_url }}"
#          export GITHUB_EVENT_PULL_REQUEST_NUMBER="${{ github.event.pull_request.number }}"
#          export GITHUB_EVENT_PULL_REQUEST_USER_LOGIN="${{ github.event.pull_request.user.login }}"
#          export LIST_OF_COMMITS=$(curl ${{ github.event.pull_request.commits_url }} | jq -r '.[] | " - " + .sha[:8] + " " + .commit.message' | perl -npe 's/\n/\\n/g')
#          echo "LIST_OF_COMMITS: :::$LIST_OF_COMMITS:::"
#          cat $GITHUB_WORKSPACE/.github/workflows/merge_template.txt | envsubst > msg-slack.json
#          echo "At this point, send a message some-whither, to the effect that the PR was merged."

  always-runs:
    runs-on: ubuntu-latest
    steps:
      - run: echo "this always runs"

      - name: Workflow info
        run: |
          echo This workflow is running against commit "${{ github.sha }}"

          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_SHA: ${GITHUB_SHA}"
          echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
          echo "https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}/checks/${GITHUB_RUN_ID}"

          echo "github.repository: ${{github.repository}}"
          echo "github.sha: ${{github.sha}}"
          echo "github.run_id: ${{github.run_id}}"
          echo "https://github.com/${{github.repository}}/commit/${{github.sha}}/checks/${{github.run_id}}"

          echo "github.server_url: ${{github.server_url}}"
          echo "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          
          echo "github.pull_request.url: ${{github.pull_request.url}}"
          echo "github.pull_request.html_url: ${{github.pull_request.html_url}}"
          echo "github.pull_request.issue_url: ${{github.pull_request.issue_url}}"
          echo "github.pull_request.comments_url: ${{github.pull_request.comments_url}}"
          echo "github.pull_request.statuses_url: ${{github.pull_request.statuses_url}}"

          echo "github.event.pull_request.url: ${{github.event.pull_request.url}}"
          echo "github.event.pull_request.html_url: ${{github.event.pull_request.html_url}}"
          echo "github.event.pull_request.issue_url: ${{github.event.pull_request.issue_url}}"
          echo "github.event.pull_request.comments_url: ${{github.event.pull_request.comments_url}}"
          echo "github.event.pull_request.statuses_url: ${{github.event.pull_request.statuses_url}}"

          echo "github.action: ${{github.action}}"
          echo "github.action_path: ${{github.action_path}}"
          echo "github.action_ref: ${{github.action_ref}}"
          echo "github.action_repository: ${{github.action_repository}}"
          echo "github.action_status: ${{github.action_status}}"
          echo "github.actor: ${{github.actor}}"
          echo "github.actor_id: ${{github.actor_id}}"
          echo "github.api_url: ${{github.api_url}}"
          echo "github.base_ref: ${{github.base_ref}}"
          echo "github.env: ${{github.env}}"
          echo "github.event: ${{github.event}}"
          echo "github.event_name: ${{github.event_name}}"
          echo "github.event_path: ${{github.event_path}}"
          echo "github.graphql_url: ${{github.graphql_url}}"
          echo "github.head_ref: ${{github.head_ref}}"
          echo "github.job: ${{github.job}}"
          echo "github.job_workflow_sha: ${{github.job_workflow_sha}}"
          echo "github.path: ${{github.path}}"
          echo "github.ref: ${{github.ref}}"
          echo "github.ref_name: ${{github.ref_name}}"
          echo "github.ref_protected: ${{github.ref_protected}}"
          echo "github.ref_type: ${{github.ref_type}}"
          echo "github.repository: ${{github.repository}}"
          echo "github.repository_id: ${{github.repository_id}}"
          echo "github.repository_owner: ${{github.repository_owner}}"
          echo "github.repository_owner_id: ${{github.repository_owner_id}}"
          echo "github.repositoryUrl: ${{github.repositoryUrl}}"
          echo "github.retention_days: ${{github.retention_days}}"
          echo "github.run_id: ${{github.run_id}}"
          echo "github.run_number: ${{github.run_number}}"
          echo "github.run_attempt: ${{github.run_attempt}}"
          echo "github.secret_source: ${{github.secret_source}}"
          echo "github.server_url: ${{github.server_url}}"
          echo "github.sha: ${{github.sha}}"
          echo "github.token: ${{github.token}}"
          echo "github.triggering_actor: ${{github.triggering_actor}}"
          echo "github.workflow: ${{github.workflow}}"
          echo "github.workflow_ref: ${{github.workflow_ref}}"
          echo "github.workflow_sha: ${{github.workflow_sha}}"
          echo "github.workspace: ${{github.workspace}}"

          echo "job: ${{job}}"
          echo "job.container: ${{job.container}}"
          echo "job.container.id: ${{job.container.id}}"
          echo "job.container.network: ${{job.container.network}}"
          echo "job.services: ${{job.services}}"
          echo "job.status: ${{job.status}}"

  runs-when-merged-1:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - run: echo "this runs when the PR is merged 1"

  runs-when-merged-2:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - run: echo "this runs when the PR is merged 2"

  runs-when-merged-3:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged }}
    steps:
      - run: echo "this runs when the PR is merged 3"

  runs-when-merged-4:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    steps:
      - run: echo "this runs when the PR is merged 4"

  do-the-thing:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == true }}
    env:
      ENVIRONMENT_NAME: env-name
      CONFLUENCE_PARENT_PAGE_ID: confluence-parent-page-id
      CONFLUENCE_SPACE_ID: confluence-space-id
      VERSION: x.y.z.w
    steps:
      - run:
          echo ./.github/workflows/_post_page_to_confluence.py \
            --username "${{vars.CONFLUENCE_USERNAME}}" \
            --api-token "${{vars.CONFLUENCE_API_TOKEN}}" \
            --space-id "$CONFLUENCE_SPACE_ID" \
            --content-from-file .github/workflows/deployment_to_backend_confluence.json \
            -t ENVIRONMENT_NAME="$ENVIRONMENT_NAME" \
            -t VERSION="$VERSION" \
            -t TRIGGERED_BY="${{github.actor}}" \
            -t TRIGGERED_BY_URL="https://github.com/orchiddevelopers/infrastructure" \
            -t STARTED_AT_TIME="2023-09-07 16:34" \
            -t COMPLETED_AT_TIME="2023-09-07 16:35" \
            -t OUTCOME="$OUTCOME" \
            -T RESULTS=staging-output.txt \
            -t PULL_REQUEST="${{github.event.pull_request.url}}" \
            -t GITHUB_ACTIONS_RUN="${{github.server_url}}/${{github.repository}}/actions/runs/${{github.run_id}}" \
            -j \
            --title 'Deploy $VERSION to production - 2023-09-07 17:07' \
            --parent-id "$CONFLUENCE_PARENT_PAGE_ID"

  runs-when-closed:
    runs-on: ubuntu-latest
    if: ${{ github.event.pull_request.merged == false }}
    steps:
      - run: echo "this runs when the PR is closed but not merged"
