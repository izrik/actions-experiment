# This is a basic workflow to help you get started with Actions

name: push

on:
  push:
    branches:
      - master

jobs:
  print_values:
    runs-on: ubuntu-latest
    steps:
      - name: print values
        run: |
          echo 'github: ${{ toJSON(github) }}'
          echo ''
          echo -n 'node:    ' ; which node
          echo -n 'python:  ' ; which python
          echo -n 'python2: ' ; which python2
          echo -n 'python3: ' ; which python3
          echo -n 'go:      ' ; which go
          echo -n 'gcc:     ' ; which gcc
          echo -n 'perl:    ' ; which perl
          echo -n 'jq:      ' ; which jq
      - name: Check for merged PR
        run: |
          url=${{ github.event.repository.commits_url }}
          commit_sha=${{ github.event.after }}
          commit_url=$(echo $url | sed s/\{\\/sha\}/$commit_sha/)
          curl "$commit_url" > commit.json
          cat commit.json
          cat commit.json | jq '(.parents | length < 2) or
             ((.commit.committer.name != "GitHub") and
              (.commit.committer.email != "noreply@github.com") and
              (.committer.login != "web-flow") and
              (.commit.message | startswith("Merge pull request #") | not ))'
#  notify_of_push:
#    runs-on: ubuntu-latest
#    steps:
      - name: prepare and send message
        run: |
          echo -n '' > msg.json
          echo -n '{"channel":"#test","text":"Someone (maybe ${{ github.event.pusher.name }}) pushed directly to master\n' >> msg.json
          echo -n 'Compare here: ${{ github.event.compare }}\n' >> msg.json
          echo -n '"}' >> msg.json
          echo '' >> msg.json
          echo ":::::::::::::::"
          cat msg.json
          echo ":::::::::::::::"
          curl -v ${{ secrets.ROCKET_CHAT_SERVER_URI }}/api/v1/chat.postMessage \
            -X POST \
            --data @msg.json \
            -H "X-Auth-Token: ${{ secrets.ROCKET_CHAT_TOKEN }}" \
            -H "X-User-Id: ${{ secrets.ROCKET_CHAT_USER_ID }}" \
            -H "Content-Type: application/json"
